# syntax = docker/dockerfile:1

# Make sure RUBY_VERSION matches the Ruby version in .ruby-version and Gemfile
ARG RUBY_VERSION=3.3.0
FROM registry.docker.com/library/ruby:$RUBY_VERSION-slim-bullseye as base

# Rails app lives here
# WORKDIR /app ?
WORKDIR /rails

# Set default (production) values. Override ex: --build-arg="RAILS_ENV='development'"
ARG RAILS_ENV="production" \
    BUNDLE_WITHOUT="development" \
    USER_ID=309

# Set environment
ENV RAILS_ENV=$RAILS_ENV \
    BUNDLE_DEPLOYMENT="1" \
    BUNDLE_PATH="/usr/local/bundle" \
    BUNDLE_WITHOUT=$BUNDLE_WITHOUT

# Throw-away build stage to reduce size of final image
FROM base as build

# Install packages needed to build gems
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y build-essential git libpq-dev pkg-config

# Install application gems
COPY Gemfile Gemfile.lock ./

RUN bundle install && \
    rm -rf ~/.bundle/ "${BUNDLE_PATH}"/ruby/*/cache "${BUNDLE_PATH}"/ruby/*/bundler/gems/*/.git && \
    bundle exec bootsnap precompile --gemfile

# Copy application code
COPY . .

# Don't include /sample_csvs in production 
RUN if [ "$RAILS_ENV" = "production" ]; then rm -rf ./sample_csvs; fi

# Precompile bootsnap code for faster boot times
RUN bundle exec bootsnap precompile app/ lib/

# Final stage for app image
FROM base

# Install packages needed for deployment
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y curl libvips postgresql-client nodejs && \
    rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Copy built artifacts: gems, application
COPY --from=build /usr/local/bundle /usr/local/bundle
COPY --from=build /rails /rails

# TODO
# Download VA Certs
# COPY ./import-va-certs.sh .
# RUN ./import-va-certs.sh

# Run and own only the runtime files as a non-root user for security
RUN groupadd --gid $USER_ID gi-bill-data-service && \
    useradd --uid $USER_ID --gid gi-bill-data-service --create-home --shell /bin/bash gi-bill-data-service && \
    chown -R gi-bill-data-service:gi-bill-data-service .
USER gi-bill-data-service:gi-bill-data-service

# Entrypoint prepares the database.
ENTRYPOINT ["/rails/bin/docker-entrypoint-new"]

# Start the server by default, this can be overwritten at runtime
EXPOSE 3000
CMD ["./bin/rails", "server", "--binding", "0.0.0.0"]
